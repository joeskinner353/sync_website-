name: Sync Version Branches

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        version-branch: [main_version2, main_version3]
        
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
        
    - name: Sync with version branch
      run: |
        # Fetch all branches
        git fetch origin
        
        # Checkout the version branch
        git checkout -B ${{ matrix.version-branch }} origin/${{ matrix.version-branch }} || git checkout -b ${{ matrix.version-branch }}
        
        # Merge main into version branch, keeping version-specific files
        git merge origin/main --no-edit --strategy-option=ours || {
          echo "Merge conflict detected, resolving..."
          
          # Reset site-version.js to version-specific content for version branches
          if [ "${{ matrix.version-branch }}" = "main_version2" ]; then
            # Update DEFAULT_VERSION and hostname detection for version_2
            sed -i 's/DEFAULT_VERSION = SITE_VERSIONS\.VERSION_1/DEFAULT_VERSION = SITE_VERSIONS.VERSION_2/' src/scripts/site-version.js
            sed -i 's/return SITE_VERSIONS\.VERSION_1/return SITE_VERSIONS.VERSION_2/' src/scripts/site-version.js
            sed -i 's/targetVersion = '\''version_1'\''/targetVersion = '\''version_2'\''/' src/scripts/composers.js
          elif [ "${{ matrix.version-branch }}" = "main_version3" ]; then
            # Update DEFAULT_VERSION and hostname detection for version_3
            sed -i 's/DEFAULT_VERSION = SITE_VERSIONS\.VERSION_1/DEFAULT_VERSION = SITE_VERSIONS.VERSION_3/' src/scripts/site-version.js
            sed -i 's/return SITE_VERSIONS\.VERSION_1/return SITE_VERSIONS.VERSION_3/' src/scripts/site-version.js
            sed -i 's/targetVersion = '\''version_1'\''/targetVersion = '\''version_3'\''/' src/scripts/composers.js
          fi
          
          # Add the resolved files
          git add src/scripts/site-version.js src/scripts/composers.js
          
          # Complete the merge
          git commit -m "Auto-sync from main: preserve version-specific configuration for ${{ matrix.version-branch }}"
        }
        
        # Push the updated branch
        git push origin ${{ matrix.version-branch }}
        
    - name: Create PR for manual review (if conflicts)
      if: failure()
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: auto-sync-${{ matrix.version-branch }}-${{ github.sha }}
        title: "Auto-sync main to ${{ matrix.version-branch }} (manual review needed)"
        body: |
          Automated sync from main branch to ${{ matrix.version-branch }} encountered conflicts.
          Please review and merge manually.
          
          Source commit: ${{ github.sha }}
